{"version":3,"sources":["Queries.js","components/quiz/QuizHeader.js","components/quiz/Answer.js","components/quiz/Question.js","components/quiz/Quiz.js","components/Footer.js","pages/quiz.js","pages/home.js","components/Header.js","App.js","index.js"],"names":["gql","QUIZ","QuizHeader","props","className","quiz","title","course","code","submitted","mark","questions","length","to","onClick","setLoading","Answer","useState","selectedStyle","setStyle","useEffect","selected","correct","answer","id","correctAnswer","style","selectAnswer","questionId","letter","math","Question","answers","setAnswers","loading","configureAnswers","a","i","question","quizAnswers","push","currentAnswer","key","body","Quiz","map","item","Footer","githubIcon","icon","faGithub","href","target","rel","setQuiz","setMark","setSubmitted","override","css","window","location","indexOf","scrollTo","process","reload","getQuiz","httpLink","createHttpLink","uri","headers","client","ApolloClient","link","cache","InMemoryCache","answerId","newAnswers","parseInt","query","variables","data","console","log","submitQuiz","qTotal","size","color","Home","setTrigger","Header","App","trigger","exact","path","component","HeaderMargin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ee76e78.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\nexport const test = gql`\n{\n  questions{\n    id\n    question\n    hasMathjax\n    answers{\n      id\n      answer\n    }\n  }\n}\n`;\n\nexport const QUIZ = gql`\nquery quiz($id: ID!){\n    quiz(id: $id) {\n      id\n      title\n      description\n      questions{\n        id\n        body\n        correctAnswer{\n          id\n          answer\n        }\n        answers{\n          id\n          answer\n        }\n      }\n      course{\n          title\n          code\n      }\n    }\n  }\n`;","\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst QuizHeader = (props) => (\n    <div className=\"quiz-header\">\n        <div className=\"quiz-header-title\">{props.quiz.title}</div>\n        <div>{props.quiz.course.code} - {props.quiz.course.title}</div>\n        {props.submitted&&\n            <>\n            <div className=\"quiz-header-score\">Score: {props.mark} / {props.quiz.questions.length}</div>\n            </>\n        }\n         <Link to=\"/\" onClick={()=>{props.setLoading(true)}}><div className=\"quiz-header-return\">Return</div></Link>\n    </div>\n)\n\nexport default QuizHeader\n","import React from 'react';\nimport { useEffect, useState} from 'react'\nimport MathJax from 'react-mathjax-preview'\n\nconst Answer = (props) => {\n    \n    let [selectedStyle, setStyle] = useState({});\n\n    useEffect(() => {\n        selectedStyle = {};\n    if(props.selected){\n        selectedStyle ={\n            \"backgroundColor\": \"#9eeaff\"\n        }\n    }else{    \n        selectedStyle ={\n            \":hover\": {\n                \"backgroundColor\": \"rgba(127, 219, 255, 0.185)\",\n              }\n        }\n       \n    }\n\n    if(props.submitted){\n        if (props.selected){\n            if(props.correct){\n                selectedStyle ={\n                    \"backgroundColor\": \"#76ff76\"\n                } \n            }else{\n                selectedStyle ={\n                    \"backgroundColor\": \"#ff6161\"\n                } \n            }\n        }else{\n\n            if(props.answer.id == props.correctAnswer.id){\n                selectedStyle ={\n                    \"backgroundColor\": \"#c2ffd2\"\n                } \n            }\n        }\n    }\n\n    setStyle(selectedStyle);\n    },[props]);\n    \n    return(\n    <div style={selectedStyle} className=\"quiz-question-answer\" onClick={()=>{props.selectAnswer(props.questionId,props.answer.id); props.setLoading(false)}}>\n        <span className=\"quiz-question-answer-letter\">{props.letter}</span>\n        <span className=\"quiz-question-answer-text\"><MathJax math={props.answer.answer} /></span>\n    </div>\n    )\n}\n\nexport default Answer\n","import React from 'react';\nimport { useEffect, useState} from 'react'\nimport MathJax from 'react-mathjax-preview'\nimport Answer from './Answer'\n\nconst Question = (props) => {\n    let [answers,setAnswers] = useState([]);\n    let [loading, setLoading] = useState(false);\n\n    const configureAnswers = () =>{\n        let a = [];\n        let correct = false;\n        for(let i = 0; i < props.question.answers.length; i++) {\n            \n            let letter = 'null';\n\n            if(i == 0){\n                letter = '(a)';\n            }else if(i == 1){\n                letter = '(b)';\n            }else if(i == 2){\n                letter = '(c)'\n            }else if(i == 3){\n                letter = '(d)'\n            }\n\n            let selected = false;\n            \n            if(props.quizAnswers[props.question.id] == props.question.answers[i].id){\n                selected = true;\n                if(props.submitted){\n                    if(props.quizAnswers[props.question.id] == props.question.correctAnswer.id){\n                        correct = true;\n                    }\n                }\n            }\n            \n            a.push(\n                <Answer letter={letter} setLoading={setLoading} selected={selected} answer={props.question.answers[i]}  correctAnswer={props.question.correctAnswer} currentAnswer={props.quizAnswers[props.question.id]} key={\"answer\"+props.question.answers[i].id} questionId={props.question.id} selectAnswer={props.selectAnswer} correct={correct} submitted={props.submitted}/>\n            );   \n        }\n        setAnswers(a);\n        setLoading(true);\n    }\n\n    useEffect(() => {\n        if(!loading){\n            configureAnswers();\n        }\n\n    })\n    useEffect(() => {\n        if(props.submitted){\n            configureAnswers();\n        }\n\n    },[props.submitted])\n\n    return(\n    <div className=\"quiz-question\">\n        <hr></hr>\n        <div className=\"quiz-question-body\"><MathJax math={props.question.body}/></div>\n        <div className=\"quiz-question-answers\">\n            {answers}\n        </div>\n    </div>\n    )\n}\n\nexport default Question\n","\nimport React from 'react';\nimport QuizHeader from './QuizHeader'\nimport Question from './Question'\n\nconst Quiz = (props) => (\n    <div className=\"quiz\">\n        <QuizHeader mark={props.mark} setLoading={props.setLoading} submitted={props.submitted} quiz={props.quiz}/>\n        {\n            props.quiz.questions.map( item => (\n\n                <Question question={item} quizAnswers={props.quizAnswers} key={\"question\"+item.id} selectAnswer={props.selectAnswer} submitted={props.submitted}/>\n\n            ))\n        }\n    </div>\n)\n\nexport default Quiz\n","\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons' \nimport '../style/footer.scss';\n\nconst Footer = () => {\n    const githubIcon = <FontAwesomeIcon icon={faGithub} />\n    return(\n        <div className=\"page-footer\">\n            <a href=\"https://github.com/CarletonComputerScienceStudyCenter\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <div className=\"page-footer-icon\">{githubIcon}</div>  \n            </a>   \n        </div>\n    );\n}\n\nexport default Footer\n","  \nimport React, { useEffect, useState } from 'react';\nimport '../style/quiz.scss';\nimport MathJax from 'react-mathjax-preview'\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { QUIZ } from '../Queries'\nimport QuizContent from '../components/quiz/Quiz'\nimport { css } from \"@emotion/core\";\nimport Footer from '../components/Footer'\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nconst Quiz = () => {\n\nlet [loading, setLoading] = useState(true);\nlet [quiz, setQuiz] = useState();\nlet [quizAnswers, setAnswers] = useState();\nlet [mark,setMark] = useState(0);\nlet [submitted, setSubmitted] = useState(false);\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  margin: auto;\n  height:100vh;\n  margin-top:20em;\n`;\n\n//This code chunk is to induce a remount, the mathjax component needs a remount to concurrently typeset each mathml component\nif(window.location.href.indexOf(\"arrive\") > -1){ \n  window.scrollTo(0,0);\n  window.location.href = process.env.PUBLIC_URL+\"/#/quiz\";\n  window.location.reload();\n}\n\nuseEffect(() => {\n  if(loading){\n    getQuiz();\n  }\n})\n\nconst httpLink = createHttpLink({\n  uri: 'https://computersciencestudycenter.herokuapp.com/graphql',\n  headers: {\n      \"Content-Type\": \"application/json\",\n  }\n})\n\nconst client = new ApolloClient({\n    link: httpLink,\n    cache: new InMemoryCache()\n})\n\nconst selectAnswer = async (questionId,answerId) =>{\n  let newAnswers = quizAnswers;\n  newAnswers[questionId] = parseInt(answerId);\n  setAnswers(newAnswers)\n}\n\nconst shuffle = (array) =>{\n  let currentIndex = array.length, temporaryValue, randomIndex;\n\n  while (0 !== currentIndex) {\n\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\n\nconst getQuiz = async () =>{\n\n  let data = await client\n      .query({\n          query: QUIZ,\n          variables: {\n              \"id\": '1'\n            }\n      });\n  \n  console.log(data.data.quiz);\n  \n  let answers = {};\n  for(let i=0;i<data.data.quiz.questions.length;i++){\n      //shuffle(data.data.quiz.questions[i].answers);\n      answers[data.data.quiz.questions[i].id] = null;\n  }\n  //shuffle(data.data.quiz.questions);\n\n  setAnswers(answers);\n  setQuiz(data.data.quiz);\n  setLoading(false)\n}\n\nconst submitQuiz = async () =>{\n  window.scrollTo(0,0);\n\n  let qTotal = quiz.questions.length;\n  let mark = 0;\n  for(let i=0;i<qTotal;i++){\n      if(quiz.questions[i].correctAnswer.id == quizAnswers[quiz.questions[i].id]){\n          mark +=1;\n      }\n  }\n  setSubmitted(true);\n  setMark(mark);\n}\n\n  return (\n      <>\n      <div className=\"quiz-page\">\n        \n        {loading ? \n          <PulseLoader\n          css={override}\n          size={10}\n          color={\"gray\"}\n          loading={loading}\n          />\n        :\n        <>\n         <QuizContent quiz={quiz} quizAnswers={quizAnswers} setLoading={setLoading} selectAnswer={selectAnswer} submitted={submitted} mark={mark}/>\n         <div className=\"quiz-page-submit-button\" onClick={submitQuiz}>Submit</div>\n        </>\n        \n        }\n      </div>\n      <Footer/>\n      </>\n  );\n}\n\nexport default Quiz;\n","//import PageHead from '../components/PageHead'\nimport React from 'react';\nimport Footer from '../components/Footer'\nimport { Link } from \"react-router-dom\";\nimport '../style/home.scss';\n\nconst Home = (props) => {\n    const redirect = () => {\n      props.setTrigger(true);\n    }\n\n  return(\n  <div className=\"container\">\n    <main>\n      <h1 className=\"title\">\n        Computer Science Study Center\n      </h1>\n\n      <p className=\"description\">\n        <code>Beta 0.1.0</code>\n      </p>\n\n      <div className=\"courses-grid\">\n        <div className=\"courses-grid-card-closed\">\n          <div className=\"courses-grid-card-code\">COMP 1805</div>\n          <div className=\"courses-grid-card-title\">Discrete Structures I</div>\n          <div className=\"courses-grid-card-description\">Introduction to discrete mathematics and discrete structures. Topics include: propositional logic, predicate calculus, set theory, complexity of algorithms, mathematical reasoning and proof techniques, recurrences, induction, finite automata and graph theory. Material is illustrated through examples from computing.</div>\n          <div className=\"courses-grid-card-button-closed\">Coming Soon</div>\n        </div>\n        <div className=\"courses-grid-card\">\n          <div className=\"courses-grid-card-code\">COMP 2804</div>\n          <div className=\"courses-grid-card-title\">Discrete Structures II</div>\n          <div className=\"courses-grid-card-description\">A second course in discrete mathematics and discrete structures. Topics include: counting, sequences and sums, discrete probability, basic statistics, recurrence relations, randomized algorithms. Material is illustrated through examples from computing.</div>\n          <div className=\"courses-grid-card-button\" onClick={redirect}>Enter</div>\n        </div>\n      </div>\n\n    </main>\n    <Footer/>\n    \n  </div>\n  );\n}\n\nexport default Home\n","  \nimport React, { useEffect, useState } from 'react';\nimport '../style/Header.scss';\nfunction Header() {\n  return (\n    <>\n    <div className=\"header\">\n        <div className=\"header-title-text\">Navbar</div>\n    </div>\n    <div className=\"App-header-margin\"></div>\n    </>\n  );\n}\n\nexport default Header;\n","  \nimport React, { useEffect, useState } from 'react';\nimport './style/App.scss';\nimport Quiz from './pages/quiz';\nimport Home from './pages/home';\nimport Header from './components/Header';\nimport Footer from './components/Footer'\nimport { HashRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nfunction App() {\n  let [trigger, setTrigger] = useState(false);\n\n    useEffect(() => {\n      if(trigger){\n        setTrigger(false);\n        window.location.href = process.env.PUBLIC_URL+\"/#/quiz?arrive=true\";\n        console.log(\"triggered\")\n      }\n\n    },[trigger]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header/>\n        <HeaderMargin/>\n        <Route exact path=\"/\" component={()=><Home trigger={trigger} setTrigger={setTrigger}/>} />\n        <Route path=\"/quiz\" component={()=><Quiz trigger={trigger} setTrigger={setTrigger}/>} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\nconst HeaderMargin = () => {\n  return(\n    <>\n    <br></br>\n    <br></br>\n    <br></br>\n    <br></br>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}